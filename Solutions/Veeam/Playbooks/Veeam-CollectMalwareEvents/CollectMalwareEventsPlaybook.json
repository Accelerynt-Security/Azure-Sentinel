{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Veeam-CollectMalwareEvents",
    "description": "A Sentinel playbook that automatically collects malware events from Veeam VBR servers on a schedule. Retrieves VBR settings from watchlist and calls the GetMalwareEvents function for each enabled server.",
    "prerequisites": [
      "1. Microsoft Sentinel workspace configured",
      "2. Permission to create Logic Apps and API Connections",
      "3. Permission to assign roles to the Resource Group",
      "4. Veeam's Azure Function App deployed and configured",
      "5. VBR Settings watchlist configured in Sentinel"
    ],
    "entities": [],
    "tags": [ "Automation", "Veeam", "Malware", "Collection" ],
    "lastUpdateTime": "2025-08-25T00:00:00.000Z",
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "Custom Template"
    },
    "parameterTemplateVersion": "1.0.0",
    "postDeployment": [
      "1. Assign Sentinel Contributor role to the Logic App identity on the Microsoft Sentinel workspace",
      "2. Assign Website Contributor role to the Logic App identity on the Function App resource",
      "3. Ensure VBR Settings watchlist is properly configured with isCollectingMalwareEvents flag set to true on servers from which you want to collect data from"
    ]
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Veeam-CollectMalwareEvents",
      "type": "string",
      "metadata": {
        "description": "Name of the playbook (Logic App) to be created"
      }
    },
    "AzureSentinelConnectionName": {
      "defaultValue": "azuresentinel-connection",
      "type": "string",
      "metadata": {
        "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
      }
    },
    "functionAppName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Function App for Veeam integration"
      }
    },
    "workspaceId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
      }
    },
    "resourceGroupName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "string",
      "metadata": {
        "description": "Name of the resource group containing the Microsoft Sentinel workspace"
      }
    }
  },
  "variables": {
    "functionAppId": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('AzureSentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        },
        "parameterValueType": "Alternative"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "hidden-SentinelTemplateName": "Veeam-CollectMalwareEvents",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "functionAppName": {
              "defaultValue": "[parameters('functionAppName')]",
              "type": "String"
            },
            "workspaceId": {
              "defaultValue": "[parameters('workspaceId')]",
              "type": "String"
            },
            "resourceGroupName": {
              "defaultValue": "[parameters('resourceGroupName')]",
              "type": "String"
            },
            "subscriptionId": {
              "defaultValue": "[subscription().subscriptionId]",
              "type": "String"
            }
          },
          "triggers": {
            "Every_1_day": {
              "recurrence": {
                "interval": 1,
                "frequency": "Day"
              },
              "evaluatedRecurrence": {
                "interval": 1,
                "frequency": "Day"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Watchlists_-_Get_VBR_Settings": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
              }
            },            "Parse_VBR_settings": {
              "runAfter": {
                "Watchlists_-_Get_VBR_Settings": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Watchlists_-_Get_VBR_Settings')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "watchlistItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "properties.itemsKeyValue": {
                                "type": "object",
                                "properties": {
                                  "VbrServerName": {
                                    "type": "string"
                                  },
                                  "baseUrl": {
                                    "type": "string"
                                  },
                                  "isCollectingMalwareEvents": {
                                    "type": "string"
                                  },
                                  "keyVaultPasswordId": {
                                    "type": "string"
                                  },
                                  "keyVaultUsernameId": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },            "For_each_VBR_server": {
              "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
              "actions": {                "Parse_current_VBR_server": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each_VBR_server')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "properties.itemsKeyValue": {
                          "type": "object",
                          "properties": {
                            "VbrServerName": {
                              "type": "string"
                            },
                            "baseUrl": {
                              "type": "string"
                            },
                            "isCollectingMalwareEvents": {
                              "type": "string"
                            },
                            "keyVaultPasswordId": {
                              "type": "string"
                            },
                            "keyVaultUsernameId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "If_malware_event_collection_is_enabled": {
                  "actions": {
                    "Collect_Malware_Events_into_VeeamMalwareEventsTable_CL": {
                      "type": "Function",
                      "inputs": {                        "queries": {
                          "vbrHostName": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['VbrServerName']"
                        },
                        "function": {
                          "id": "[concat(variables('functionAppId'), '/functions/GetAllMalwareEventsAsync')]"
                        }
                      }
                    }
                  },                  "runAfter": {
                    "Parse_current_VBR_server": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Print_baseUrl": {
                        "type": "Compose",
                        "inputs": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['baseUrl']"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['isCollectingMalwareEvents']",
                          "true"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },              "runAfter": {
                "Parse_VBR_settings": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionName": "[parameters('AzureSentinelConnectionName')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}
